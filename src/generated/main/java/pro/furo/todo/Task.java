// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: task/task.proto

package pro.furo.todo;

/**
 * <pre>
 * Tasks are essential at work.
 * </pre>
 *
 * Protobuf type {@code task.Task}
 */
public  final class Task extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:task.Task)
    TaskOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Task.newBuilder() to construct.
  private Task(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Task() {
    id_ = "";
    displayName_ = "";
    note_ = "";
    checklist_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    relatedTasks_ = java.util.Collections.emptyList();
    involvedPersons_ = java.util.Collections.emptyList();
    done_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Task(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            displayName_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            note_ = s;
            break;
          }
          case 34: {
            pro.furo.todo.Reference.Builder subBuilder = null;
            if (parent_ != null) {
              subBuilder = parent_.toBuilder();
            }
            parent_ = input.readMessage(pro.furo.todo.Reference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(parent_);
              parent_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              checklist_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000010;
            }
            checklist_.add(s);
            break;
          }
          case 50: {
            com.google.type.Date.Builder subBuilder = null;
            if (dueDate_ != null) {
              subBuilder = dueDate_.toBuilder();
            }
            dueDate_ = input.readMessage(com.google.type.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dueDate_);
              dueDate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              relatedTasks_ = new java.util.ArrayList<pro.furo.todo.Reference>();
              mutable_bitField0_ |= 0x00000040;
            }
            relatedTasks_.add(
                input.readMessage(pro.furo.todo.Reference.parser(), extensionRegistry));
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              involvedPersons_ = new java.util.ArrayList<com.furo.baseperson.Reference>();
              mutable_bitField0_ |= 0x00000080;
            }
            involvedPersons_.add(
                input.readMessage(com.furo.baseperson.Reference.parser(), extensionRegistry));
            break;
          }
          case 74: {
            com.furo.baseperson.Reference.Builder subBuilder = null;
            if (responsiblePerson_ != null) {
              subBuilder = responsiblePerson_.toBuilder();
            }
            responsiblePerson_ = input.readMessage(com.furo.baseperson.Reference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(responsiblePerson_);
              responsiblePerson_ = subBuilder.buildPartial();
            }

            break;
          }
          case 80: {

            done_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        checklist_ = checklist_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        relatedTasks_ = java.util.Collections.unmodifiableList(relatedTasks_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        involvedPersons_ = java.util.Collections.unmodifiableList(involvedPersons_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pro.furo.todo.TaskProto.internal_static_task_Task_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pro.furo.todo.TaskProto.internal_static_task_Task_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pro.furo.todo.Task.class, pro.furo.todo.Task.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * Task id (is a ULID).
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Task id (is a ULID).
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DISPLAY_NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object displayName_;
  /**
   * <pre>
   * We use this field label the task
   * </pre>
   *
   * <code>string display_name = 2;</code>
   */
  public java.lang.String getDisplayName() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      displayName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * We use this field label the task
   * </pre>
   *
   * <code>string display_name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getDisplayNameBytes() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      displayName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NOTE_FIELD_NUMBER = 3;
  private volatile java.lang.Object note_;
  /**
   * <pre>
   * Add some notes
   * </pre>
   *
   * <code>string note = 3;</code>
   */
  public java.lang.String getNote() {
    java.lang.Object ref = note_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      note_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Add some notes
   * </pre>
   *
   * <code>string note = 3;</code>
   */
  public com.google.protobuf.ByteString
      getNoteBytes() {
    java.lang.Object ref = note_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      note_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PARENT_FIELD_NUMBER = 4;
  private pro.furo.todo.Reference parent_;
  /**
   * <pre>
   * The parent for this task
   * </pre>
   *
   * <code>.task.Reference parent = 4;</code>
   */
  public boolean hasParent() {
    return parent_ != null;
  }
  /**
   * <pre>
   * The parent for this task
   * </pre>
   *
   * <code>.task.Reference parent = 4;</code>
   */
  public pro.furo.todo.Reference getParent() {
    return parent_ == null ? pro.furo.todo.Reference.getDefaultInstance() : parent_;
  }
  /**
   * <pre>
   * The parent for this task
   * </pre>
   *
   * <code>.task.Reference parent = 4;</code>
   */
  public pro.furo.todo.ReferenceOrBuilder getParentOrBuilder() {
    return getParent();
  }

  public static final int CHECKLIST_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList checklist_;
  /**
   * <pre>
   * A task can have a checklist (more work)
   * </pre>
   *
   * <code>repeated string checklist = 5;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getChecklistList() {
    return checklist_;
  }
  /**
   * <pre>
   * A task can have a checklist (more work)
   * </pre>
   *
   * <code>repeated string checklist = 5;</code>
   */
  public int getChecklistCount() {
    return checklist_.size();
  }
  /**
   * <pre>
   * A task can have a checklist (more work)
   * </pre>
   *
   * <code>repeated string checklist = 5;</code>
   */
  public java.lang.String getChecklist(int index) {
    return checklist_.get(index);
  }
  /**
   * <pre>
   * A task can have a checklist (more work)
   * </pre>
   *
   * <code>repeated string checklist = 5;</code>
   */
  public com.google.protobuf.ByteString
      getChecklistBytes(int index) {
    return checklist_.getByteString(index);
  }

  public static final int DUE_DATE_FIELD_NUMBER = 6;
  private com.google.type.Date dueDate_;
  /**
   * <pre>
   * Use this to give pressure.
   * </pre>
   *
   * <code>.google.type.Date due_date = 6;</code>
   */
  public boolean hasDueDate() {
    return dueDate_ != null;
  }
  /**
   * <pre>
   * Use this to give pressure.
   * </pre>
   *
   * <code>.google.type.Date due_date = 6;</code>
   */
  public com.google.type.Date getDueDate() {
    return dueDate_ == null ? com.google.type.Date.getDefaultInstance() : dueDate_;
  }
  /**
   * <pre>
   * Use this to give pressure.
   * </pre>
   *
   * <code>.google.type.Date due_date = 6;</code>
   */
  public com.google.type.DateOrBuilder getDueDateOrBuilder() {
    return getDueDate();
  }

  public static final int RELATED_TASKS_FIELD_NUMBER = 7;
  private java.util.List<pro.furo.todo.Reference> relatedTasks_;
  /**
   * <pre>
   * Maybe we can benefit.
   * </pre>
   *
   * <code>repeated .task.Reference related_tasks = 7;</code>
   */
  public java.util.List<pro.furo.todo.Reference> getRelatedTasksList() {
    return relatedTasks_;
  }
  /**
   * <pre>
   * Maybe we can benefit.
   * </pre>
   *
   * <code>repeated .task.Reference related_tasks = 7;</code>
   */
  public java.util.List<? extends pro.furo.todo.ReferenceOrBuilder> 
      getRelatedTasksOrBuilderList() {
    return relatedTasks_;
  }
  /**
   * <pre>
   * Maybe we can benefit.
   * </pre>
   *
   * <code>repeated .task.Reference related_tasks = 7;</code>
   */
  public int getRelatedTasksCount() {
    return relatedTasks_.size();
  }
  /**
   * <pre>
   * Maybe we can benefit.
   * </pre>
   *
   * <code>repeated .task.Reference related_tasks = 7;</code>
   */
  public pro.furo.todo.Reference getRelatedTasks(int index) {
    return relatedTasks_.get(index);
  }
  /**
   * <pre>
   * Maybe we can benefit.
   * </pre>
   *
   * <code>repeated .task.Reference related_tasks = 7;</code>
   */
  public pro.furo.todo.ReferenceOrBuilder getRelatedTasksOrBuilder(
      int index) {
    return relatedTasks_.get(index);
  }

  public static final int INVOLVED_PERSONS_FIELD_NUMBER = 8;
  private java.util.List<com.furo.baseperson.Reference> involvedPersons_;
  /**
   * <pre>
   * Sometimes a task is to hard for one person only.
   * </pre>
   *
   * <code>repeated .person.Reference involved_persons = 8;</code>
   */
  public java.util.List<com.furo.baseperson.Reference> getInvolvedPersonsList() {
    return involvedPersons_;
  }
  /**
   * <pre>
   * Sometimes a task is to hard for one person only.
   * </pre>
   *
   * <code>repeated .person.Reference involved_persons = 8;</code>
   */
  public java.util.List<? extends com.furo.baseperson.ReferenceOrBuilder> 
      getInvolvedPersonsOrBuilderList() {
    return involvedPersons_;
  }
  /**
   * <pre>
   * Sometimes a task is to hard for one person only.
   * </pre>
   *
   * <code>repeated .person.Reference involved_persons = 8;</code>
   */
  public int getInvolvedPersonsCount() {
    return involvedPersons_.size();
  }
  /**
   * <pre>
   * Sometimes a task is to hard for one person only.
   * </pre>
   *
   * <code>repeated .person.Reference involved_persons = 8;</code>
   */
  public com.furo.baseperson.Reference getInvolvedPersons(int index) {
    return involvedPersons_.get(index);
  }
  /**
   * <pre>
   * Sometimes a task is to hard for one person only.
   * </pre>
   *
   * <code>repeated .person.Reference involved_persons = 8;</code>
   */
  public com.furo.baseperson.ReferenceOrBuilder getInvolvedPersonsOrBuilder(
      int index) {
    return involvedPersons_.get(index);
  }

  public static final int RESPONSIBLE_PERSON_FIELD_NUMBER = 9;
  private com.furo.baseperson.Reference responsiblePerson_;
  /**
   * <pre>
   * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
   * </pre>
   *
   * <code>.person.Reference responsible_person = 9;</code>
   */
  public boolean hasResponsiblePerson() {
    return responsiblePerson_ != null;
  }
  /**
   * <pre>
   * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
   * </pre>
   *
   * <code>.person.Reference responsible_person = 9;</code>
   */
  public com.furo.baseperson.Reference getResponsiblePerson() {
    return responsiblePerson_ == null ? com.furo.baseperson.Reference.getDefaultInstance() : responsiblePerson_;
  }
  /**
   * <pre>
   * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
   * </pre>
   *
   * <code>.person.Reference responsible_person = 9;</code>
   */
  public com.furo.baseperson.ReferenceOrBuilder getResponsiblePersonOrBuilder() {
    return getResponsiblePerson();
  }

  public static final int DONE_FIELD_NUMBER = 10;
  private boolean done_;
  /**
   * <pre>
   * this si maybe the main feature.
   * </pre>
   *
   * <code>bool done = 10;</code>
   */
  public boolean getDone() {
    return done_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!getDisplayNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, displayName_);
    }
    if (!getNoteBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, note_);
    }
    if (parent_ != null) {
      output.writeMessage(4, getParent());
    }
    for (int i = 0; i < checklist_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, checklist_.getRaw(i));
    }
    if (dueDate_ != null) {
      output.writeMessage(6, getDueDate());
    }
    for (int i = 0; i < relatedTasks_.size(); i++) {
      output.writeMessage(7, relatedTasks_.get(i));
    }
    for (int i = 0; i < involvedPersons_.size(); i++) {
      output.writeMessage(8, involvedPersons_.get(i));
    }
    if (responsiblePerson_ != null) {
      output.writeMessage(9, getResponsiblePerson());
    }
    if (done_ != false) {
      output.writeBool(10, done_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!getDisplayNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, displayName_);
    }
    if (!getNoteBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, note_);
    }
    if (parent_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getParent());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < checklist_.size(); i++) {
        dataSize += computeStringSizeNoTag(checklist_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getChecklistList().size();
    }
    if (dueDate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getDueDate());
    }
    for (int i = 0; i < relatedTasks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, relatedTasks_.get(i));
    }
    for (int i = 0; i < involvedPersons_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, involvedPersons_.get(i));
    }
    if (responsiblePerson_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getResponsiblePerson());
    }
    if (done_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, done_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pro.furo.todo.Task)) {
      return super.equals(obj);
    }
    pro.furo.todo.Task other = (pro.furo.todo.Task) obj;

    boolean result = true;
    result = result && getId()
        .equals(other.getId());
    result = result && getDisplayName()
        .equals(other.getDisplayName());
    result = result && getNote()
        .equals(other.getNote());
    result = result && (hasParent() == other.hasParent());
    if (hasParent()) {
      result = result && getParent()
          .equals(other.getParent());
    }
    result = result && getChecklistList()
        .equals(other.getChecklistList());
    result = result && (hasDueDate() == other.hasDueDate());
    if (hasDueDate()) {
      result = result && getDueDate()
          .equals(other.getDueDate());
    }
    result = result && getRelatedTasksList()
        .equals(other.getRelatedTasksList());
    result = result && getInvolvedPersonsList()
        .equals(other.getInvolvedPersonsList());
    result = result && (hasResponsiblePerson() == other.hasResponsiblePerson());
    if (hasResponsiblePerson()) {
      result = result && getResponsiblePerson()
          .equals(other.getResponsiblePerson());
    }
    result = result && (getDone()
        == other.getDone());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + DISPLAY_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getDisplayName().hashCode();
    hash = (37 * hash) + NOTE_FIELD_NUMBER;
    hash = (53 * hash) + getNote().hashCode();
    if (hasParent()) {
      hash = (37 * hash) + PARENT_FIELD_NUMBER;
      hash = (53 * hash) + getParent().hashCode();
    }
    if (getChecklistCount() > 0) {
      hash = (37 * hash) + CHECKLIST_FIELD_NUMBER;
      hash = (53 * hash) + getChecklistList().hashCode();
    }
    if (hasDueDate()) {
      hash = (37 * hash) + DUE_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getDueDate().hashCode();
    }
    if (getRelatedTasksCount() > 0) {
      hash = (37 * hash) + RELATED_TASKS_FIELD_NUMBER;
      hash = (53 * hash) + getRelatedTasksList().hashCode();
    }
    if (getInvolvedPersonsCount() > 0) {
      hash = (37 * hash) + INVOLVED_PERSONS_FIELD_NUMBER;
      hash = (53 * hash) + getInvolvedPersonsList().hashCode();
    }
    if (hasResponsiblePerson()) {
      hash = (37 * hash) + RESPONSIBLE_PERSON_FIELD_NUMBER;
      hash = (53 * hash) + getResponsiblePerson().hashCode();
    }
    hash = (37 * hash) + DONE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDone());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pro.furo.todo.Task parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pro.furo.todo.Task parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pro.furo.todo.Task parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pro.furo.todo.Task parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pro.furo.todo.Task parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pro.furo.todo.Task parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pro.furo.todo.Task parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pro.furo.todo.Task parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pro.furo.todo.Task parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pro.furo.todo.Task parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pro.furo.todo.Task parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pro.furo.todo.Task parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pro.furo.todo.Task prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Tasks are essential at work.
   * </pre>
   *
   * Protobuf type {@code task.Task}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:task.Task)
      pro.furo.todo.TaskOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pro.furo.todo.TaskProto.internal_static_task_Task_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pro.furo.todo.TaskProto.internal_static_task_Task_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pro.furo.todo.Task.class, pro.furo.todo.Task.Builder.class);
    }

    // Construct using pro.furo.todo.Task.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getRelatedTasksFieldBuilder();
        getInvolvedPersonsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      displayName_ = "";

      note_ = "";

      if (parentBuilder_ == null) {
        parent_ = null;
      } else {
        parent_ = null;
        parentBuilder_ = null;
      }
      checklist_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      if (dueDateBuilder_ == null) {
        dueDate_ = null;
      } else {
        dueDate_ = null;
        dueDateBuilder_ = null;
      }
      if (relatedTasksBuilder_ == null) {
        relatedTasks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        relatedTasksBuilder_.clear();
      }
      if (involvedPersonsBuilder_ == null) {
        involvedPersons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        involvedPersonsBuilder_.clear();
      }
      if (responsiblePersonBuilder_ == null) {
        responsiblePerson_ = null;
      } else {
        responsiblePerson_ = null;
        responsiblePersonBuilder_ = null;
      }
      done_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pro.furo.todo.TaskProto.internal_static_task_Task_descriptor;
    }

    @java.lang.Override
    public pro.furo.todo.Task getDefaultInstanceForType() {
      return pro.furo.todo.Task.getDefaultInstance();
    }

    @java.lang.Override
    public pro.furo.todo.Task build() {
      pro.furo.todo.Task result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public pro.furo.todo.Task buildPartial() {
      pro.furo.todo.Task result = new pro.furo.todo.Task(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.id_ = id_;
      result.displayName_ = displayName_;
      result.note_ = note_;
      if (parentBuilder_ == null) {
        result.parent_ = parent_;
      } else {
        result.parent_ = parentBuilder_.build();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        checklist_ = checklist_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.checklist_ = checklist_;
      if (dueDateBuilder_ == null) {
        result.dueDate_ = dueDate_;
      } else {
        result.dueDate_ = dueDateBuilder_.build();
      }
      if (relatedTasksBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          relatedTasks_ = java.util.Collections.unmodifiableList(relatedTasks_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.relatedTasks_ = relatedTasks_;
      } else {
        result.relatedTasks_ = relatedTasksBuilder_.build();
      }
      if (involvedPersonsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          involvedPersons_ = java.util.Collections.unmodifiableList(involvedPersons_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.involvedPersons_ = involvedPersons_;
      } else {
        result.involvedPersons_ = involvedPersonsBuilder_.build();
      }
      if (responsiblePersonBuilder_ == null) {
        result.responsiblePerson_ = responsiblePerson_;
      } else {
        result.responsiblePerson_ = responsiblePersonBuilder_.build();
      }
      result.done_ = done_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pro.furo.todo.Task) {
        return mergeFrom((pro.furo.todo.Task)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pro.furo.todo.Task other) {
      if (other == pro.furo.todo.Task.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getDisplayName().isEmpty()) {
        displayName_ = other.displayName_;
        onChanged();
      }
      if (!other.getNote().isEmpty()) {
        note_ = other.note_;
        onChanged();
      }
      if (other.hasParent()) {
        mergeParent(other.getParent());
      }
      if (!other.checklist_.isEmpty()) {
        if (checklist_.isEmpty()) {
          checklist_ = other.checklist_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureChecklistIsMutable();
          checklist_.addAll(other.checklist_);
        }
        onChanged();
      }
      if (other.hasDueDate()) {
        mergeDueDate(other.getDueDate());
      }
      if (relatedTasksBuilder_ == null) {
        if (!other.relatedTasks_.isEmpty()) {
          if (relatedTasks_.isEmpty()) {
            relatedTasks_ = other.relatedTasks_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRelatedTasksIsMutable();
            relatedTasks_.addAll(other.relatedTasks_);
          }
          onChanged();
        }
      } else {
        if (!other.relatedTasks_.isEmpty()) {
          if (relatedTasksBuilder_.isEmpty()) {
            relatedTasksBuilder_.dispose();
            relatedTasksBuilder_ = null;
            relatedTasks_ = other.relatedTasks_;
            bitField0_ = (bitField0_ & ~0x00000040);
            relatedTasksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRelatedTasksFieldBuilder() : null;
          } else {
            relatedTasksBuilder_.addAllMessages(other.relatedTasks_);
          }
        }
      }
      if (involvedPersonsBuilder_ == null) {
        if (!other.involvedPersons_.isEmpty()) {
          if (involvedPersons_.isEmpty()) {
            involvedPersons_ = other.involvedPersons_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureInvolvedPersonsIsMutable();
            involvedPersons_.addAll(other.involvedPersons_);
          }
          onChanged();
        }
      } else {
        if (!other.involvedPersons_.isEmpty()) {
          if (involvedPersonsBuilder_.isEmpty()) {
            involvedPersonsBuilder_.dispose();
            involvedPersonsBuilder_ = null;
            involvedPersons_ = other.involvedPersons_;
            bitField0_ = (bitField0_ & ~0x00000080);
            involvedPersonsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInvolvedPersonsFieldBuilder() : null;
          } else {
            involvedPersonsBuilder_.addAllMessages(other.involvedPersons_);
          }
        }
      }
      if (other.hasResponsiblePerson()) {
        mergeResponsiblePerson(other.getResponsiblePerson());
      }
      if (other.getDone() != false) {
        setDone(other.getDone());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pro.furo.todo.Task parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pro.furo.todo.Task) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * Task id (is a ULID).
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Task id (is a ULID).
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Task id (is a ULID).
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Task id (is a ULID).
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Task id (is a ULID).
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object displayName_ = "";
    /**
     * <pre>
     * We use this field label the task
     * </pre>
     *
     * <code>string display_name = 2;</code>
     */
    public java.lang.String getDisplayName() {
      java.lang.Object ref = displayName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        displayName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * We use this field label the task
     * </pre>
     *
     * <code>string display_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      java.lang.Object ref = displayName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        displayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * We use this field label the task
     * </pre>
     *
     * <code>string display_name = 2;</code>
     */
    public Builder setDisplayName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      displayName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * We use this field label the task
     * </pre>
     *
     * <code>string display_name = 2;</code>
     */
    public Builder clearDisplayName() {
      
      displayName_ = getDefaultInstance().getDisplayName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * We use this field label the task
     * </pre>
     *
     * <code>string display_name = 2;</code>
     */
    public Builder setDisplayNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      displayName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object note_ = "";
    /**
     * <pre>
     * Add some notes
     * </pre>
     *
     * <code>string note = 3;</code>
     */
    public java.lang.String getNote() {
      java.lang.Object ref = note_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        note_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Add some notes
     * </pre>
     *
     * <code>string note = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNoteBytes() {
      java.lang.Object ref = note_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        note_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Add some notes
     * </pre>
     *
     * <code>string note = 3;</code>
     */
    public Builder setNote(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      note_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Add some notes
     * </pre>
     *
     * <code>string note = 3;</code>
     */
    public Builder clearNote() {
      
      note_ = getDefaultInstance().getNote();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Add some notes
     * </pre>
     *
     * <code>string note = 3;</code>
     */
    public Builder setNoteBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      note_ = value;
      onChanged();
      return this;
    }

    private pro.furo.todo.Reference parent_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pro.furo.todo.Reference, pro.furo.todo.Reference.Builder, pro.furo.todo.ReferenceOrBuilder> parentBuilder_;
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    public boolean hasParent() {
      return parentBuilder_ != null || parent_ != null;
    }
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    public pro.furo.todo.Reference getParent() {
      if (parentBuilder_ == null) {
        return parent_ == null ? pro.furo.todo.Reference.getDefaultInstance() : parent_;
      } else {
        return parentBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    public Builder setParent(pro.furo.todo.Reference value) {
      if (parentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parent_ = value;
        onChanged();
      } else {
        parentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    public Builder setParent(
        pro.furo.todo.Reference.Builder builderForValue) {
      if (parentBuilder_ == null) {
        parent_ = builderForValue.build();
        onChanged();
      } else {
        parentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    public Builder mergeParent(pro.furo.todo.Reference value) {
      if (parentBuilder_ == null) {
        if (parent_ != null) {
          parent_ =
            pro.furo.todo.Reference.newBuilder(parent_).mergeFrom(value).buildPartial();
        } else {
          parent_ = value;
        }
        onChanged();
      } else {
        parentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    public Builder clearParent() {
      if (parentBuilder_ == null) {
        parent_ = null;
        onChanged();
      } else {
        parent_ = null;
        parentBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    public pro.furo.todo.Reference.Builder getParentBuilder() {
      
      onChanged();
      return getParentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    public pro.furo.todo.ReferenceOrBuilder getParentOrBuilder() {
      if (parentBuilder_ != null) {
        return parentBuilder_.getMessageOrBuilder();
      } else {
        return parent_ == null ?
            pro.furo.todo.Reference.getDefaultInstance() : parent_;
      }
    }
    /**
     * <pre>
     * The parent for this task
     * </pre>
     *
     * <code>.task.Reference parent = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pro.furo.todo.Reference, pro.furo.todo.Reference.Builder, pro.furo.todo.ReferenceOrBuilder> 
        getParentFieldBuilder() {
      if (parentBuilder_ == null) {
        parentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pro.furo.todo.Reference, pro.furo.todo.Reference.Builder, pro.furo.todo.ReferenceOrBuilder>(
                getParent(),
                getParentForChildren(),
                isClean());
        parent_ = null;
      }
      return parentBuilder_;
    }

    private com.google.protobuf.LazyStringList checklist_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureChecklistIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        checklist_ = new com.google.protobuf.LazyStringArrayList(checklist_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getChecklistList() {
      return checklist_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public int getChecklistCount() {
      return checklist_.size();
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public java.lang.String getChecklist(int index) {
      return checklist_.get(index);
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChecklistBytes(int index) {
      return checklist_.getByteString(index);
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public Builder setChecklist(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureChecklistIsMutable();
      checklist_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public Builder addChecklist(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureChecklistIsMutable();
      checklist_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public Builder addAllChecklist(
        java.lang.Iterable<java.lang.String> values) {
      ensureChecklistIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, checklist_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public Builder clearChecklist() {
      checklist_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A task can have a checklist (more work)
     * </pre>
     *
     * <code>repeated string checklist = 5;</code>
     */
    public Builder addChecklistBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureChecklistIsMutable();
      checklist_.add(value);
      onChanged();
      return this;
    }

    private com.google.type.Date dueDate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder> dueDateBuilder_;
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    public boolean hasDueDate() {
      return dueDateBuilder_ != null || dueDate_ != null;
    }
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    public com.google.type.Date getDueDate() {
      if (dueDateBuilder_ == null) {
        return dueDate_ == null ? com.google.type.Date.getDefaultInstance() : dueDate_;
      } else {
        return dueDateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    public Builder setDueDate(com.google.type.Date value) {
      if (dueDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dueDate_ = value;
        onChanged();
      } else {
        dueDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    public Builder setDueDate(
        com.google.type.Date.Builder builderForValue) {
      if (dueDateBuilder_ == null) {
        dueDate_ = builderForValue.build();
        onChanged();
      } else {
        dueDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    public Builder mergeDueDate(com.google.type.Date value) {
      if (dueDateBuilder_ == null) {
        if (dueDate_ != null) {
          dueDate_ =
            com.google.type.Date.newBuilder(dueDate_).mergeFrom(value).buildPartial();
        } else {
          dueDate_ = value;
        }
        onChanged();
      } else {
        dueDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    public Builder clearDueDate() {
      if (dueDateBuilder_ == null) {
        dueDate_ = null;
        onChanged();
      } else {
        dueDate_ = null;
        dueDateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    public com.google.type.Date.Builder getDueDateBuilder() {
      
      onChanged();
      return getDueDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    public com.google.type.DateOrBuilder getDueDateOrBuilder() {
      if (dueDateBuilder_ != null) {
        return dueDateBuilder_.getMessageOrBuilder();
      } else {
        return dueDate_ == null ?
            com.google.type.Date.getDefaultInstance() : dueDate_;
      }
    }
    /**
     * <pre>
     * Use this to give pressure.
     * </pre>
     *
     * <code>.google.type.Date due_date = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder> 
        getDueDateFieldBuilder() {
      if (dueDateBuilder_ == null) {
        dueDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>(
                getDueDate(),
                getParentForChildren(),
                isClean());
        dueDate_ = null;
      }
      return dueDateBuilder_;
    }

    private java.util.List<pro.furo.todo.Reference> relatedTasks_ =
      java.util.Collections.emptyList();
    private void ensureRelatedTasksIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        relatedTasks_ = new java.util.ArrayList<pro.furo.todo.Reference>(relatedTasks_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pro.furo.todo.Reference, pro.furo.todo.Reference.Builder, pro.furo.todo.ReferenceOrBuilder> relatedTasksBuilder_;

    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public java.util.List<pro.furo.todo.Reference> getRelatedTasksList() {
      if (relatedTasksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(relatedTasks_);
      } else {
        return relatedTasksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public int getRelatedTasksCount() {
      if (relatedTasksBuilder_ == null) {
        return relatedTasks_.size();
      } else {
        return relatedTasksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public pro.furo.todo.Reference getRelatedTasks(int index) {
      if (relatedTasksBuilder_ == null) {
        return relatedTasks_.get(index);
      } else {
        return relatedTasksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder setRelatedTasks(
        int index, pro.furo.todo.Reference value) {
      if (relatedTasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedTasksIsMutable();
        relatedTasks_.set(index, value);
        onChanged();
      } else {
        relatedTasksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder setRelatedTasks(
        int index, pro.furo.todo.Reference.Builder builderForValue) {
      if (relatedTasksBuilder_ == null) {
        ensureRelatedTasksIsMutable();
        relatedTasks_.set(index, builderForValue.build());
        onChanged();
      } else {
        relatedTasksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder addRelatedTasks(pro.furo.todo.Reference value) {
      if (relatedTasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedTasksIsMutable();
        relatedTasks_.add(value);
        onChanged();
      } else {
        relatedTasksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder addRelatedTasks(
        int index, pro.furo.todo.Reference value) {
      if (relatedTasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedTasksIsMutable();
        relatedTasks_.add(index, value);
        onChanged();
      } else {
        relatedTasksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder addRelatedTasks(
        pro.furo.todo.Reference.Builder builderForValue) {
      if (relatedTasksBuilder_ == null) {
        ensureRelatedTasksIsMutable();
        relatedTasks_.add(builderForValue.build());
        onChanged();
      } else {
        relatedTasksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder addRelatedTasks(
        int index, pro.furo.todo.Reference.Builder builderForValue) {
      if (relatedTasksBuilder_ == null) {
        ensureRelatedTasksIsMutable();
        relatedTasks_.add(index, builderForValue.build());
        onChanged();
      } else {
        relatedTasksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder addAllRelatedTasks(
        java.lang.Iterable<? extends pro.furo.todo.Reference> values) {
      if (relatedTasksBuilder_ == null) {
        ensureRelatedTasksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relatedTasks_);
        onChanged();
      } else {
        relatedTasksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder clearRelatedTasks() {
      if (relatedTasksBuilder_ == null) {
        relatedTasks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        relatedTasksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public Builder removeRelatedTasks(int index) {
      if (relatedTasksBuilder_ == null) {
        ensureRelatedTasksIsMutable();
        relatedTasks_.remove(index);
        onChanged();
      } else {
        relatedTasksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public pro.furo.todo.Reference.Builder getRelatedTasksBuilder(
        int index) {
      return getRelatedTasksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public pro.furo.todo.ReferenceOrBuilder getRelatedTasksOrBuilder(
        int index) {
      if (relatedTasksBuilder_ == null) {
        return relatedTasks_.get(index);  } else {
        return relatedTasksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public java.util.List<? extends pro.furo.todo.ReferenceOrBuilder> 
         getRelatedTasksOrBuilderList() {
      if (relatedTasksBuilder_ != null) {
        return relatedTasksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(relatedTasks_);
      }
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public pro.furo.todo.Reference.Builder addRelatedTasksBuilder() {
      return getRelatedTasksFieldBuilder().addBuilder(
          pro.furo.todo.Reference.getDefaultInstance());
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public pro.furo.todo.Reference.Builder addRelatedTasksBuilder(
        int index) {
      return getRelatedTasksFieldBuilder().addBuilder(
          index, pro.furo.todo.Reference.getDefaultInstance());
    }
    /**
     * <pre>
     * Maybe we can benefit.
     * </pre>
     *
     * <code>repeated .task.Reference related_tasks = 7;</code>
     */
    public java.util.List<pro.furo.todo.Reference.Builder> 
         getRelatedTasksBuilderList() {
      return getRelatedTasksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pro.furo.todo.Reference, pro.furo.todo.Reference.Builder, pro.furo.todo.ReferenceOrBuilder> 
        getRelatedTasksFieldBuilder() {
      if (relatedTasksBuilder_ == null) {
        relatedTasksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pro.furo.todo.Reference, pro.furo.todo.Reference.Builder, pro.furo.todo.ReferenceOrBuilder>(
                relatedTasks_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        relatedTasks_ = null;
      }
      return relatedTasksBuilder_;
    }

    private java.util.List<com.furo.baseperson.Reference> involvedPersons_ =
      java.util.Collections.emptyList();
    private void ensureInvolvedPersonsIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        involvedPersons_ = new java.util.ArrayList<com.furo.baseperson.Reference>(involvedPersons_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.furo.baseperson.Reference, com.furo.baseperson.Reference.Builder, com.furo.baseperson.ReferenceOrBuilder> involvedPersonsBuilder_;

    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public java.util.List<com.furo.baseperson.Reference> getInvolvedPersonsList() {
      if (involvedPersonsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(involvedPersons_);
      } else {
        return involvedPersonsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public int getInvolvedPersonsCount() {
      if (involvedPersonsBuilder_ == null) {
        return involvedPersons_.size();
      } else {
        return involvedPersonsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public com.furo.baseperson.Reference getInvolvedPersons(int index) {
      if (involvedPersonsBuilder_ == null) {
        return involvedPersons_.get(index);
      } else {
        return involvedPersonsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder setInvolvedPersons(
        int index, com.furo.baseperson.Reference value) {
      if (involvedPersonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInvolvedPersonsIsMutable();
        involvedPersons_.set(index, value);
        onChanged();
      } else {
        involvedPersonsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder setInvolvedPersons(
        int index, com.furo.baseperson.Reference.Builder builderForValue) {
      if (involvedPersonsBuilder_ == null) {
        ensureInvolvedPersonsIsMutable();
        involvedPersons_.set(index, builderForValue.build());
        onChanged();
      } else {
        involvedPersonsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder addInvolvedPersons(com.furo.baseperson.Reference value) {
      if (involvedPersonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInvolvedPersonsIsMutable();
        involvedPersons_.add(value);
        onChanged();
      } else {
        involvedPersonsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder addInvolvedPersons(
        int index, com.furo.baseperson.Reference value) {
      if (involvedPersonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInvolvedPersonsIsMutable();
        involvedPersons_.add(index, value);
        onChanged();
      } else {
        involvedPersonsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder addInvolvedPersons(
        com.furo.baseperson.Reference.Builder builderForValue) {
      if (involvedPersonsBuilder_ == null) {
        ensureInvolvedPersonsIsMutable();
        involvedPersons_.add(builderForValue.build());
        onChanged();
      } else {
        involvedPersonsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder addInvolvedPersons(
        int index, com.furo.baseperson.Reference.Builder builderForValue) {
      if (involvedPersonsBuilder_ == null) {
        ensureInvolvedPersonsIsMutable();
        involvedPersons_.add(index, builderForValue.build());
        onChanged();
      } else {
        involvedPersonsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder addAllInvolvedPersons(
        java.lang.Iterable<? extends com.furo.baseperson.Reference> values) {
      if (involvedPersonsBuilder_ == null) {
        ensureInvolvedPersonsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, involvedPersons_);
        onChanged();
      } else {
        involvedPersonsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder clearInvolvedPersons() {
      if (involvedPersonsBuilder_ == null) {
        involvedPersons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        involvedPersonsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public Builder removeInvolvedPersons(int index) {
      if (involvedPersonsBuilder_ == null) {
        ensureInvolvedPersonsIsMutable();
        involvedPersons_.remove(index);
        onChanged();
      } else {
        involvedPersonsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public com.furo.baseperson.Reference.Builder getInvolvedPersonsBuilder(
        int index) {
      return getInvolvedPersonsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public com.furo.baseperson.ReferenceOrBuilder getInvolvedPersonsOrBuilder(
        int index) {
      if (involvedPersonsBuilder_ == null) {
        return involvedPersons_.get(index);  } else {
        return involvedPersonsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public java.util.List<? extends com.furo.baseperson.ReferenceOrBuilder> 
         getInvolvedPersonsOrBuilderList() {
      if (involvedPersonsBuilder_ != null) {
        return involvedPersonsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(involvedPersons_);
      }
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public com.furo.baseperson.Reference.Builder addInvolvedPersonsBuilder() {
      return getInvolvedPersonsFieldBuilder().addBuilder(
          com.furo.baseperson.Reference.getDefaultInstance());
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public com.furo.baseperson.Reference.Builder addInvolvedPersonsBuilder(
        int index) {
      return getInvolvedPersonsFieldBuilder().addBuilder(
          index, com.furo.baseperson.Reference.getDefaultInstance());
    }
    /**
     * <pre>
     * Sometimes a task is to hard for one person only.
     * </pre>
     *
     * <code>repeated .person.Reference involved_persons = 8;</code>
     */
    public java.util.List<com.furo.baseperson.Reference.Builder> 
         getInvolvedPersonsBuilderList() {
      return getInvolvedPersonsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.furo.baseperson.Reference, com.furo.baseperson.Reference.Builder, com.furo.baseperson.ReferenceOrBuilder> 
        getInvolvedPersonsFieldBuilder() {
      if (involvedPersonsBuilder_ == null) {
        involvedPersonsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.furo.baseperson.Reference, com.furo.baseperson.Reference.Builder, com.furo.baseperson.ReferenceOrBuilder>(
                involvedPersons_,
                ((bitField0_ & 0x00000080) == 0x00000080),
                getParentForChildren(),
                isClean());
        involvedPersons_ = null;
      }
      return involvedPersonsBuilder_;
    }

    private com.furo.baseperson.Reference responsiblePerson_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.furo.baseperson.Reference, com.furo.baseperson.Reference.Builder, com.furo.baseperson.ReferenceOrBuilder> responsiblePersonBuilder_;
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    public boolean hasResponsiblePerson() {
      return responsiblePersonBuilder_ != null || responsiblePerson_ != null;
    }
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    public com.furo.baseperson.Reference getResponsiblePerson() {
      if (responsiblePersonBuilder_ == null) {
        return responsiblePerson_ == null ? com.furo.baseperson.Reference.getDefaultInstance() : responsiblePerson_;
      } else {
        return responsiblePersonBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    public Builder setResponsiblePerson(com.furo.baseperson.Reference value) {
      if (responsiblePersonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        responsiblePerson_ = value;
        onChanged();
      } else {
        responsiblePersonBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    public Builder setResponsiblePerson(
        com.furo.baseperson.Reference.Builder builderForValue) {
      if (responsiblePersonBuilder_ == null) {
        responsiblePerson_ = builderForValue.build();
        onChanged();
      } else {
        responsiblePersonBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    public Builder mergeResponsiblePerson(com.furo.baseperson.Reference value) {
      if (responsiblePersonBuilder_ == null) {
        if (responsiblePerson_ != null) {
          responsiblePerson_ =
            com.furo.baseperson.Reference.newBuilder(responsiblePerson_).mergeFrom(value).buildPartial();
        } else {
          responsiblePerson_ = value;
        }
        onChanged();
      } else {
        responsiblePersonBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    public Builder clearResponsiblePerson() {
      if (responsiblePersonBuilder_ == null) {
        responsiblePerson_ = null;
        onChanged();
      } else {
        responsiblePerson_ = null;
        responsiblePersonBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    public com.furo.baseperson.Reference.Builder getResponsiblePersonBuilder() {
      
      onChanged();
      return getResponsiblePersonFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    public com.furo.baseperson.ReferenceOrBuilder getResponsiblePersonOrBuilder() {
      if (responsiblePersonBuilder_ != null) {
        return responsiblePersonBuilder_.getMessageOrBuilder();
      } else {
        return responsiblePerson_ == null ?
            com.furo.baseperson.Reference.getDefaultInstance() : responsiblePerson_;
      }
    }
    /**
     * <pre>
     * If something goes wrong, we should be able to make some one responsible for it. This is aligned with our CYA strategy.
     * </pre>
     *
     * <code>.person.Reference responsible_person = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.furo.baseperson.Reference, com.furo.baseperson.Reference.Builder, com.furo.baseperson.ReferenceOrBuilder> 
        getResponsiblePersonFieldBuilder() {
      if (responsiblePersonBuilder_ == null) {
        responsiblePersonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.furo.baseperson.Reference, com.furo.baseperson.Reference.Builder, com.furo.baseperson.ReferenceOrBuilder>(
                getResponsiblePerson(),
                getParentForChildren(),
                isClean());
        responsiblePerson_ = null;
      }
      return responsiblePersonBuilder_;
    }

    private boolean done_ ;
    /**
     * <pre>
     * this si maybe the main feature.
     * </pre>
     *
     * <code>bool done = 10;</code>
     */
    public boolean getDone() {
      return done_;
    }
    /**
     * <pre>
     * this si maybe the main feature.
     * </pre>
     *
     * <code>bool done = 10;</code>
     */
    public Builder setDone(boolean value) {
      
      done_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * this si maybe the main feature.
     * </pre>
     *
     * <code>bool done = 10;</code>
     */
    public Builder clearDone() {
      
      done_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:task.Task)
  }

  // @@protoc_insertion_point(class_scope:task.Task)
  private static final pro.furo.todo.Task DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pro.furo.todo.Task();
  }

  public static pro.furo.todo.Task getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Task>
      PARSER = new com.google.protobuf.AbstractParser<Task>() {
    @java.lang.Override
    public Task parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Task(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Task> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Task> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public pro.furo.todo.Task getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

